package com.eazybytes.accounts.repository;

import com.eazybytes.accounts.entity.Accounts;
import jakarta.transaction.Transactional;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import java.util.Optional;

@Repository
public interface AccountsRepository extends JpaRepository<Accounts, Long> {

    Optional<Accounts> findByCustomerId(Long customerId);

    /*
    Modifying should be used with transactional to ensure we don't get data access exception in case of insert, update & delete query.
    it should be limited to methods whose implementation is generated by spring data jpa.
     */
    @Transactional
    @Modifying
    void deleteByCustomerId(Long customerId);
}
